name: Deploy Frontend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - uses: actions/cache@v3 
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    
    - name: Install dependencies and build
      run: |
        npm config set registry https://registry.npmmirror.com
        npm install
        npm config set registry https://registry.npmjs.org
        npm run build

    - name: Build and Upload Frontend files to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "build/"
        target: "/home/ec2-user/frontend-equipox/"

    - name: SSH and Build/Run Docker Container
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ec2-user/frontend-equipox
          
          # Borramos contenedor viejo si existe
          sudo docker rm -f frontend-container || true
          
          # Borramos imagen vieja si existe
          sudo docker rmi frontend-image || true
          
          # Construimos nueva imagen
          sudo docker build -t frontend-image .

          # Levantamos nuevo contenedor
          sudo docker run -d --name frontend-container -p 80:80 frontend-image
